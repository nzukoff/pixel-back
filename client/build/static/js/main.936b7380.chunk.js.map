{"version":3,"sources":["components/Image/Image.js","actions/index.js","components/Button/Button.js","components/ButtonWrapper/ButtonWrapper.js","components/Filler/Filler.js","components/ScoreBar/ScoreBar.js","components/Display/Display.js","components/Peek/Peek.js","Game.js","App.js","reducers/index.js","index.js"],"names":["Image","createImage","document","querySelector","src","_this","props","pngData","this","react_default","a","createElement","className","alt","id","Component","connect","state","imageSize","image_size","png_data","doInitialFetch","load_type","num_colors","titles","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","response","title","wrap","_context","prev","next","concat","axios","post","sent","data","doInitialFetchSuccess","getColorOptions","stop","_x","apply","arguments","type","meta","mixpanel","event","difficulty","_ref2","_callee2","color_options","labels","_context2","get","getColorOptionsSuccess","setButtonStyles","_x2","choice","chosen_place","choice_color","button_dim","button_styles","map","color","index","backgroundColor","width","height","border","borderRadius","margin","chooseColorSuccess","choices","current_percentage","chosen_ranking","percentage","score","win","end","length","Button","buttonStyle","currentBackground","objectSpread","style","onClick","button_colored","place","unsetClick","chooseColor","_ref3","_callee3","_context3","_x3","colored","i","ButtonWrapper","button_style","components_Button_Button","key","Filler","ScoreBar","components_Filler_Filler","Display","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateHighScore","newScore","setState","highScore","findEnding","chosenRanking","_this2","index_esm","class","chosenPlace","components_ScoreBar_ScoreBar","choiceColor","buttonStyles","Peek","showImage","sneakPeaks","shown","ogPngData","startTimer","sec","intervalId","setInterval","innerHTML","clearInterval","sneakAPeak","og_png_data","sneak_peaks","Game","components_Peek_Peek","components_Image_Image","components_ButtonWrapper_ButtonWrapper","components_Display_Display","App","src_Game_0","initialState","rootReducer","undefined","action","option","init","mixpanelMiddleware","MixpanelMiddleware","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.936b7380.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport './Image.css' \n\nclass Image extends Component {\n    componentDidUpdate() {\n        this.createImage()\n    }\n\n    createImage = () => {\n        document.querySelector(\"#image\").src = \"data:image/png;base64,\" + this.props.pngData;\n    }\n\n    render() {\n        return (\n            <div className=\"Image\">\n                <img alt=\"colorful picture\" id=\"image\" src=\"\"></img>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    imageSize: state.image_size, \n    pngData: state.png_data\n})\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Image)","import axios from 'axios'\n\nexport const doInitialFetch = (load_type, num_colors, titles) => {\n    return async (dispatch) => {\n        const url = `/api/load/${load_type}`\n        const response = await axios.post(url, {titles})\n        const image_size = response.data.image_size\n        const png_data = response.data.png_data\n        const title = response.data.title\n        titles = response.data.titles\n        dispatch(doInitialFetchSuccess(image_size, png_data, titles, num_colors))\n        dispatch(getColorOptions(num_colors, image_size, title))\n    }\n}\n    \nexport const doInitialFetchSuccess = (image_size, png_data, titles, num_colors) => ({\n    type: 'DO_INITIAL_FETCH_SUCCESS',\n    image_size, \n    png_data,\n    titles,\n    meta: {\n        mixpanel: {\n            event: 'Load Game',\n            props: {\n                titles: titles,\n                difficulty: num_colors\n            }\n        }\n    }\n})\n\nexport const getColorOptions = (num_colors, image_size, title) => {\n    return async (dispatch) => {\n        const url = `/api/options/${num_colors}?title=${title}`\n        const response = await axios.get(url)\n        const color_options = response.data.color_options\n        const labels = response.data.labels\n        dispatch(getColorOptionsSuccess(color_options, labels, title))\n        dispatch(setButtonStyles(null, image_size, color_options))\n    }\n}\n\nexport const getColorOptionsSuccess = (color_options, labels, title) => ({\n    type: 'GET_COLOR_OPTIONS_SUCCESS',\n    color_options, \n    labels,\n    title\n})\n\nexport const setButtonStyles = (choice, image_size, color_options, chosen_place) => {\n    let button_dim = (image_size[0]/5)-2\n    let choice_color\n    let button_styles = color_options.map((color, index) => {\n        if (index === choice) {\n            if (chosen_place === 1){\n                choice_color = {\n                    backgroundColor: `rgb(${color})`, \n                    width: `${button_dim}px`,\n                    height: `${button_dim}px`,\n                    border: '1px solid rgb(0,200,83)',\n                    borderRadius: '10px',\n                    margin: '1px'\n                } \n            } else {\n                choice_color = {\n                    backgroundColor: `rgb(${color})`, \n                    width: `${button_dim}px`,\n                    height: `${button_dim}px`,\n                    border: '1px solid rgb(205,208,210)',\n                    borderRadius: '10px',\n                    margin: '1px'\n                }\n            }            \n            color = [236, 249, 249]\n        }\n        return {\n            backgroundColor: `rgb(${color})`, \n            width: `${button_dim}px`,\n            height: `${button_dim}px`,\n            border: '1px solid rgb(205,208,210)',\n            borderRadius: '10px',\n            margin: '1px'\n        }\n    })\n    color_options[choice] = [236, 249, 249]\n    return ({\n        type: 'SET_BUTTON_STYLES',\n        button_styles,\n        choice_color,\n        color_options\n    })\n}\n\nexport const chooseColor = (choice, choices, image_size, labels, title, color_options, percentage) => {\n    return async (dispatch) => {\n        const url = `/api/choose/${choice}?title=${title}`\n        const response = await axios.post(url, { labels, choices })\n        const png_data = response.data.png_data\n        const chosen_place = response.data.chosen_place\n        const chosen_ranking = response.data.chosen_ranking\n        choices = response.data.choices\n        dispatch(chooseColorSuccess(png_data, chosen_place, choices, color_options, percentage, chosen_ranking))\n        dispatch(setButtonStyles(choice, image_size, color_options, chosen_place))\n    }\n}\n\nexport const chooseColorSuccess = (png_data, chosen_place, choices, color_options, current_percentage, chosen_ranking) => {\n    let percentage = 0\n    let score = 0\n    let win = false\n    let end = false\n    if (chosen_place === 1) {\n        percentage  = (100/color_options.length)\n        score = 10\n    }\n    if (choices.length === color_options.length) {\n        end = true\n    }\n    if (chosen_place === 1 && current_percentage === 100-percentage) {\n        win = true\n    }\n    return ({\n        type: 'CHOOSE_COLOR_SUCCESS', \n        png_data, \n        color_options, \n        chosen_place, \n        choices,\n        percentage, \n        score,\n        chosen_ranking,\n        meta: {\n            mixpanel: {\n                event: 'Choose Color',\n                props: {\n                    percentage: current_percentage,\n                    win: win,\n                    end: end\n                }\n            }\n        }\n    })\n}\n\nexport const sneakAPeak = (sneakPeaks) => {\n    if (sneakPeaks > 0) {\n        --sneakPeaks\n    }\n    return {\n        type: 'SNEAK_A_PEAK',\n        sneakPeaks\n    }\n}\n\nexport const unsetClick = (button_colored, choice) => {\n    return {\n        type: 'UNSET_CLICK',\n        button_colored: button_colored.map((colored, i ) => {return i === choice || colored === false ? false : true})\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { chooseColor, unsetClick } from '../../actions/index'\n\nclass Button extends Component {\n    render() {\n        let buttonStyle\n        let currentBackground = this.props.buttonStyle.backgroundColor\n        if (currentBackground === 'rgb(236,249,249)' || currentBackground === 'rgb()') {\n            buttonStyle = {\n                ...this.props.buttonStyle,\n                border: 'rgb(236,249,249)'\n            }\n        }\n        else {\n            buttonStyle = this.props.buttonStyle\n        }\n        return (\n            <div style={buttonStyle} onClick={this.props.button_colored[this.props.place] ? async () => { await this.props.unsetClick(this.props.button_colored, this.props.place); await this.props.chooseColor(this.props.place, this.props.choices, this.props.image_size, this.props.labels, this.props.title, this.props.color_options, this.props.percentage)} : null}></div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    image_size: state.image_size, \n    labels: state.labels,\n    title: state.title, \n    color_options: state.color_options, \n    choices: state.choices,\n    percentage: state.percentage,\n    button_colored: state.button_colored\n})\n\nconst mapDispatchToProps = dispatch => ({\n    chooseColor: (choice, choices, image_size, labels, title, color_options, percentage) => dispatch(chooseColor(choice, choices, image_size, labels, title, color_options, percentage)),\n    unsetClick: (button_colored, choice) => dispatch(unsetClick(button_colored, choice))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Button)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../Button/Button'\n\nimport './ButtonWrapper.css'\n\nclass ButtonWrapper extends Component {\n    render() {        \n        return (\n            <div className=\"ButtonWrapper\">\n                {\n                  this.props.button_styles.map((button_style, i) => {\n                    return <div className='button'><Button key={i} place={i} buttonStyle={button_style}/></div>\n                  })\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    button_styles : state.button_styles,\n})\n\nexport default connect(\n    mapStateToProps, \n    null\n  )(ButtonWrapper)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Filler.css'\n\nclass Filler extends Component {\n    render() {\n        return (\n            <div className=\"Filler\" style={{ width: `${this.props.percentage}%` }} >\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    percentage: state.percentage\n})\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Filler)","import React, { Component } from 'react';\nimport Filler from '../Filler/Filler'\nimport './ScoreBar.css'\n\nclass ScoreBar extends Component {\n    render() {\n        return (\n            <div className=\"ScoreBar VerticalStripes\">\n                <Filler />\n            </div>\n        );\n    }\n}\n\nexport default ScoreBar;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FaRegSmile, FaRegTired, FaRegSurprise, FaRegFlushed, FaRegGrinStars } from 'react-icons/fa';\n\nimport ScoreBar from '../ScoreBar/ScoreBar'\nimport './Display.css'\n\nimport { doInitialFetch } from '../../actions/index'\n\nclass Display extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { highScore: 0 }\n    }\n\n    componentDidUpdate() {\n        if (this.props.score > this.state.highScore) {\n            this.updateHighScore(this.props.score)\n        }\n    }\n\n    updateHighScore = (newScore) => {\n        this.setState({highScore: newScore})\n    }\n\n    findEnding = () => {\n        let end = ''\n        if (this.props.chosenRanking === 1) {\n            end = 'st'\n        } else if (this.props.chosenRanking === 2) {\n            end = 'nd'\n        } else if (this.props.chosenRanking === 3) {\n            end = 'rd'\n        } else {\n            end = 'th'\n        }\n        return end\n    }\n\n    render() {\n        let end = this.findEnding()\n        let instructions \n        if(this.props.choices.length === 0) {\n            if (this.props.titles.length === 1) {\n                instructions = \n                    <div className=\"display-4 instructions\"><h4>Score by picking the most prevalent color each turn</h4></div>\n            }\n        }\n        else {\n            instructions = <div></div>\n        }\n        return (\n            <div className=\"Display\">\n                <div className=\"score_board\">\n                    <div className=\"container\">\n                        <div className=\"row difficulties\">                            \n                            <div className=\"col-3\">\n                                <div className=\"btn btn-outline-secondary difficulty\" onClick={() => {this.props.doInitialFetch('next', 5, this.props.titles)}}><FaRegGrinStars className='options'/></div>\n                            </div>\n                            <div className=\"col-3\">\n                                <div className=\"btn btn-outline-secondary difficulty\" onClick={() => {this.props.doInitialFetch('next', 10, this.props.titles)}}><FaRegSurprise className='options'/></div>\n                            </div>\n                            <div className=\"col-3\">\n\n                                <div className=\"btn btn-outline-secondary difficulty\" onClick={() => {this.props.doInitialFetch('next', 15, this.props.titles)}}><FaRegFlushed className='options'/></div>\n                            </div>                       \n                        </div>\n                        <div className=\"row\">\n                            <div class=\"col-5 col-lg-8\">\n                                <div className=\"score\">{`Score: ${this.props.score}`}</div>\n                            </div>\n                            <div class=\"col-7 col-lg-4 \">\n                                <div className=\"choice float-right\">{this.props.chosenRanking ? this.props.chosenPlace === 1 ? <FaRegSmile className=\"correct\"/> : <FaRegTired className=\"wrong\"/>  : ''}</div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                              <div className=\"scorebar\">\n                                { this.props.titles.length > 1 ? <div className=\"highscore\">{`Your high score is: ${this.state.highScore}`}</div> : <div></div> }\n                                <ScoreBar />\n                              </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"guess\" style={this.props.choiceColor} ></div>\n                                {\n                                    this.props.chosenRanking ? <div><div className=\"common\">{`was the ${this.props.chosenRanking}${end} most`}</div><div className=\"common\">{`common`}</div></div> : <div></div>\n                                }                                \n                            </div>\n                        </div>  \n                        <div className=\"row\">\n                            <div className=\"col\">\n                                {\n                                    this.props.percentage === 100 ? <img alt='you win!' className=\"win\" src=\"https://media.giphy.com/media/3oz8xAFtqoOUUrsh7W/giphy.gif\"></img>: <div></div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    chosenPlace: state.chosen_place, \n    score: state.score,\n    titles: state.titles,\n    buttonStyles: state.button_styles,\n    choiceColor: state.choice_color,\n    percentage: state.percentage,\n    choices: state.choices,\n    chosenRanking: state.chosen_ranking\n})\n\nconst mapDispatchToProps = dispatch => ({\n    doInitialFetch: (load_type, num_colors, titles) => dispatch(doInitialFetch(load_type, num_colors, titles))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Display)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Peek.css'\n\nimport { sneakAPeak } from '../../actions/index'\n\nclass Peek extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { shown: false }\n    }\n\n    showImage = () => {\n        if (this.props.sneakPeaks > 0) {\n            if (!this.state.shown) {\n                document.querySelector(\"#peek\").src = \"data:image/png;base64,\" + this.props.ogPngData;\n                this.setState({shown: true})\n                this.startTimer()\n            } \n        }\n    }\n\n    startTimer = () => {\n        let sec = 4\n        const intervalId = setInterval(() => {\n            document.querySelector(\"#time\").innerHTML = sec\n            if (sec > 0 ) {\n                sec--\n            } else {\n                document.querySelector(\"#peek\").src = \"\";\n                this.setState({shown: false})\n                clearInterval(intervalId);\n            }\n          }, 1000);\n    }\n\n    render() {\n        return (\n            <div className=\"Peek\"> \n                <div className=\"row\">                            \n                    <div className=\"col\">\n                        <button type=\"button\" className=\"btn btn-outline-secondary sneak-peek\" onClick={() => {this.props.sneakAPeak(this.props.sneakPeaks); this.showImage()}}>Sneak Peek</button>\n                        <div className=\"sneak-peaks\">{`${this.props.sneakPeaks}x left`}</div>\n                    </div>\n                </div>\n                <div className=\"row\">                            \n                    <div className=\"col\">\n                        { this.state.shown ? <div className=\"timer\">Sneak peek for <span id=\"time\">5</span> seconds!</div> : '' }\n                        <img id=\"peek\" src=\"\"></img>\n                    </div>             \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ogPngData: state.og_png_data, \n    sneakPeaks: state.sneak_peaks\n})\n\nconst mapDispatchToProps = dispatch => ({\n    sneakAPeak: (sneakPeaks) => dispatch(sneakAPeak(sneakPeaks))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Peek)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Image from './components/Image/Image'\nimport ButtonWrapper from './components/ButtonWrapper/ButtonWrapper'\nimport Display from './components/Display/Display'\nimport Peek from './components/Peek/Peek'\n\nimport { doInitialFetch } from './actions/index'\n\nimport './Game.css'\n\nclass Game extends Component {\n    componentDidMount() {\n        this.props.doInitialFetch('new', 10, this.props.titles)\n    }\n\n    render() {        \n        return (\n            <div className=\"Game\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-lg-3\">\n                            <Peek />\n                        </div>\n                        <div className=\"col container text-center center-col\" >\n                            <Image />\n                            <ButtonWrapper/>\n                        </div>\n                        <div className=\"col\">\n                            <Display />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    button_styles : state.button_styles,\n    titles : state.titles\n})\n\nconst mapDispatchToProps = dispatch => ({\n    doInitialFetch: (load_type, num_colors, titles) => dispatch(doInitialFetch(load_type, num_colors, titles))\n})\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps\n  )(Game)","import React, { Component } from 'react';\nimport Game from './Game'\nimport './App.css'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Game /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n    color_options: [],\n    image_size: [], \n    button_colored: [],\n    score: 0, \n    percentage: 0,\n    chosen_place: 0,\n    button_styles: [],\n    choices: [],\n    titles: [],\n    choice_color: {},\n    sneak_peaks: 3,\n    // host: 'http://127.0.0.1:5000/'\n    // host: 'https://pixel-game-api.herokuapp.com/'\n}\n  \n  const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'DO_INITIAL_FETCH_SUCCESS':\n        return({\n          ...state,\n          image_size: action.image_size,\n          png_data: action.png_data,\n          og_png_data: action.png_data,\n          titles: action.titles,\n          button_styles: [],\n          button_colored: [],\n          score: 0,\n          percentage: 0,\n          chosen_place: 0, \n          choices: [],\n          color_options: [], \n          labels: [],\n          choice_color: {},\n          chosen_ranking: 0,\n          sneak_peaks: 3\n        })\n      \n      case 'GET_COLOR_OPTIONS_SUCCESS':\n        return({\n          ...state,\n          color_options: action.color_options, \n          labels: action.labels,\n          title: action.title,\n          button_colored: action.color_options.map(option => true)\n        })\n\n      case 'SET_BUTTON_STYLES':\n        return({\n          ...state,\n          button_styles: action.button_styles,\n          choice_color: action.choice_color,\n          color_options: action.color_options\n        })   \n        \n      case 'CHOOSE_COLOR_SUCCESS':\n        return({\n          ...state,\n          png_data: action.png_data,\n          color_options: action.color_options, \n          chosen_place: action.chosen_place,\n          choices: action.choices,\n          percentage: state.percentage + action.percentage, \n          score: state.score + action.score,\n          chosen_ranking: action.chosen_ranking\n        })\n\n      case 'SNEAK_A_PEAK':\n        return({\n          ...state,\n          sneak_peaks: action.sneakPeaks\n        })\n\n      case 'UNSET_CLICK':\n        return({\n          ...state,\n          button_colored: action.button_colored\n        })\n\n\n      default:\n        return (state)\n    }\n  }\n  \n  export default rootReducer\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './reducers/index'\nimport thunk from 'redux-thunk'\nimport mixpanel from 'mixpanel-browser'\nimport MixpanelMiddleware from 'redux-mixpanel-middleware'\n\nconst t = 'ea649757ae9f14683b0c30fbe49a39dc'\n\nmixpanel.init(t)\nconst mixpanelMiddleware = new MixpanelMiddleware(mixpanel)\n \nconst store = createStore(rootReducer, applyMiddleware(thunk, mixpanelMiddleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}