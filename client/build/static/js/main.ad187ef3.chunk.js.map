{"version":3,"sources":["components/Image/Image.js","actions/index.js","components/Button/Button.js","components/Filler/Filler.js","components/ScoreBar/ScoreBar.js","components/Display/Display.js","components/Peek/Peek.js","Game.js","App.js","reducers/index.js","index.js"],"names":["Image","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createImage","document","querySelector","src","pngData","react_default","a","createElement","className","id","Component","connect","state","imageSize","image_size","png_data","doInitialFetch","load_type","num_colors","titles","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","response","title","wrap","_context","prev","next","concat","axios","post","sent","data","doInitialFetchSuccess","getColorOptions","stop","_x","apply","arguments","type","meta","mixpanel","event","difficulty","_ref2","_callee2","color_options","labels","_context2","get","getColorOptionsSuccess","setButtonStyles","_x2","choice","chosen_place","choice_color","button_dim","button_styles","map","color","index","backgroundColor","padding","border","borderRadius","margin","display","float","chooseColorSuccess","choices","current_percentage","chosen_ranking","percentage","score","win","end","length","Button","buttonStyle","currentBackground","objectSpread","style","onClick","button_colored","place","unsetClick","chooseColor","_ref3","_callee3","_context3","_x3","colored","i","Filler","width","ScoreBar","components_Filler_Filler","Display","updateHighScore","newScore","setState","highScore","findEnding","chosenRanking","instructions","_this2","components_ScoreBar_ScoreBar","choiceColor","chosenPlace","buttonStyles","Peek","showImage","sneakPeaks","shown","ogPngData","startTimer","sec","intervalId","setInterval","innerHTML","clearInterval","sneakAPeak","og_png_data","sneak_peaks","Game","components_Peek_Peek","components_Image_Image","button_style","components_Button_Button","key","components_Display_Display","App","src_Game_0","initialState","_initialState","defineProperty","rootReducer","undefined","action","option","init","mixpanelMiddleware","MixpanelMiddleware","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ad187ef3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport './Image.css' \n\nclass Image extends Component {\n    constructor(props) {\n        super(props)\n    }\n    \n    componentDidUpdate() {\n        this.createImage()\n    }\n\n    createImage = () => {\n        document.querySelector(\"#image\").src = \"data:image/png;base64,\" + this.props.pngData;\n    }\n\n    render() {\n        return (\n            <div className=\"Image\">\n                <img id=\"image\" src=\"\"></img>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    imageSize: state.image_size, \n    pngData: state.png_data\n})\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Image)","import axios from 'axios'\n\nexport const doInitialFetch = (load_type, num_colors, titles) => {\n    return async (dispatch) => {\n        const url = `/api/load/${load_type}`\n        const response = await axios.post(url, {titles})\n        const image_size = response.data.image_size\n        const png_data = response.data.png_data\n        const title = response.data.title\n        titles = response.data.titles\n        dispatch(doInitialFetchSuccess(image_size, png_data, titles, num_colors))\n        dispatch(getColorOptions(num_colors, image_size, title))\n    }\n}\n    \nexport const doInitialFetchSuccess = (image_size, png_data, titles, num_colors) => ({\n    type: 'DO_INITIAL_FETCH_SUCCESS',\n    image_size, \n    png_data,\n    titles,\n    meta: {\n        mixpanel: {\n            event: 'Load Game',\n            props: {\n                titles: titles,\n                difficulty: num_colors\n            }\n        }\n    }\n})\n\nexport const getColorOptions = (num_colors, image_size, title) => {\n    return async (dispatch) => {\n        const url = `/api/options/${num_colors}?title=${title}`\n        const response = await axios.get(url)\n        const color_options = response.data.color_options\n        const labels = response.data.labels\n        dispatch(getColorOptionsSuccess(color_options, labels, title))\n        dispatch(setButtonStyles(null, image_size, color_options))\n    }\n}\n\nexport const getColorOptionsSuccess = (color_options, labels, title) => ({\n    type: 'GET_COLOR_OPTIONS_SUCCESS',\n    color_options, \n    labels,\n    title\n})\n\nexport const setButtonStyles = (choice, image_size, color_options, chosen_place) => {\n    let button_dim = (image_size[0]/5)/2-2\n    let choice_color\n    let button_styles = color_options.map((color, index) => {\n        if (index === choice) {\n            if (chosen_place === 1){\n                choice_color = {\n                    backgroundColor: `rgb(${color})`, \n                    padding: `${button_dim}px ${button_dim}px`,\n                    border: '1px solid rgb(0,200,83)',\n                    borderRadius: '10px',\n                    margin: '1px',\n                    display: 'inline',\n                    float:'left'\n                } \n            } else {\n                choice_color = {\n                    backgroundColor: `rgb(${color})`, \n                    padding: `${button_dim}px ${button_dim}px`,\n                    border: '1px solid rgb(205,208,210)',\n                    borderRadius: '10px',\n                    margin: '1px',\n                    display: 'inline',\n                    float:'left'\n                }\n            }            \n            color = [236, 249, 249]\n        }\n        return {\n            backgroundColor: `rgb(${color})`, \n            padding: `${button_dim}px ${button_dim}px`,\n            border: '1px solid rgb(205,208,210)',\n            borderRadius: '10px',\n            margin: '1px',\n            display: 'inline',\n            float:'left'\n        }\n    })\n    color_options[choice] = [236, 249, 249]\n    return ({\n        type: 'SET_BUTTON_STYLES',\n        button_styles,\n        choice_color,\n        color_options\n    })\n}\n\nexport const chooseColor = (choice, choices, image_size, labels, title, color_options, percentage) => {\n    return async (dispatch) => {\n        const url = `/api/choose/${choice}?title=${title}`\n        const response = await axios.post(url, { labels, choices })\n        const png_data = response.data.png_data\n        const chosen_place = response.data.chosen_place\n        const chosen_ranking = response.data.chosen_ranking\n        choices = response.data.choices\n        dispatch(chooseColorSuccess(png_data, chosen_place, choices, color_options, percentage, chosen_ranking))\n        dispatch(setButtonStyles(choice, image_size, color_options, chosen_place))\n    }\n}\n\nexport const chooseColorSuccess = (png_data, chosen_place, choices, color_options, current_percentage, chosen_ranking) => {\n    let percentage = 0\n    let score = 0\n    let win = false\n    let end = false\n    if (chosen_place === 1) {\n        percentage  = (100/color_options.length)\n        score = 10\n    }\n    if (choices.length === color_options.length) {\n        end = true\n    }\n    if (chosen_place === 1 && current_percentage === 100-percentage) {\n        win = true\n    }\n    return ({\n        type: 'CHOOSE_COLOR_SUCCESS', \n        png_data, \n        color_options, \n        chosen_place, \n        choices,\n        percentage, \n        score,\n        chosen_ranking,\n        meta: {\n            mixpanel: {\n                event: 'Choose Color',\n                props: {\n                    percentage: current_percentage,\n                    win: win,\n                    end: end\n                }\n            }\n        }\n    })\n}\n\nexport const sneakAPeak = (sneakPeaks) => {\n    if (sneakPeaks > 0) {\n        --sneakPeaks\n    }\n    return {\n        type: 'SNEAK_A_PEAK',\n        sneakPeaks\n    }\n}\n\nexport const unsetClick = (button_colored, choice) => {\n    return {\n        type: 'UNSET_CLICK',\n        button_colored: button_colored.map((colored, i ) => {return i === choice || colored === false ? false : true})\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { chooseColor, unsetClick } from '../../actions/index'\n\nclass Button extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let buttonStyle\n        let currentBackground = this.props.buttonStyle.backgroundColor\n        if (currentBackground === 'rgb(236,249,249)' || currentBackground === 'rgb()') {\n            buttonStyle = {\n                ...this.props.buttonStyle,\n                border: 'none',\n                margin: '2px',\n            }\n        }\n        else {\n            buttonStyle = this.props.buttonStyle\n        }\n        return (\n            <div className=\"Button\">\n                <div style={buttonStyle} onClick={this.props.button_colored[this.props.place] ? async () => {await this.props.unsetClick(this.props.button_colored, this.props.place);this.props.chooseColor(this.props.place, this.props.choices, this.props.image_size, this.props.labels, this.props.title, this.props.color_options, this.props.percentage)} : null}></div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    image_size: state.image_size, \n    labels: state.labels,\n    title: state.title, \n    color_options: state.color_options, \n    choices: state.choices,\n    percentage: state.percentage,\n    button_colored: state.button_colored\n})\n\nconst mapDispatchToProps = dispatch => ({\n    chooseColor: (choice, choices, image_size, labels, title, color_options, percentage) => dispatch(chooseColor(choice, choices, image_size, labels, title, color_options, percentage)),\n    unsetClick: (button_colored, choice) => dispatch(unsetClick(button_colored, choice))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Button)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Filler.css'\n\nclass Filler extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"Filler\" style={{ width: `${this.props.percentage}%` }} >\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    percentage: state.percentage\n})\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Filler)","import React, { Component } from 'react';\nimport Filler from '../Filler/Filler'\nimport './ScoreBar.css'\n\nclass ScoreBar extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"ScoreBar VerticalStripes\">\n                <Filler />\n            </div>\n        );\n    }\n}\n\nexport default ScoreBar;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport ScoreBar from '../ScoreBar/ScoreBar'\nimport './Display.css'\n\nimport { doInitialFetch } from '../../actions/index'\n\nclass Display extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { highScore: 0 }\n    }\n\n    componentDidUpdate() {\n        if (this.props.score > this.state.highScore) {\n            this.updateHighScore(this.props.score)\n        }\n    }\n\n    updateHighScore = (newScore) => {\n        this.setState({highScore: newScore})\n    }\n\n    findEnding = () => {\n        let end = ''\n        if (this.props.chosenRanking === 1) {\n            end = 'st'\n        } else if (this.props.chosenRanking === 2) {\n            end = 'nd'\n        } else if (this.props.chosenRanking === 3) {\n            end = 'rd'\n        } else {\n            end = 'th'\n        }\n        return end\n    }\n\n    render() {\n        let end = this.findEnding()\n        let instructions \n        if(this.props.choices.length === 0) {\n            if (this.props.titles.length === 1) {\n                instructions = \n                    <div className=\"display-4 instructions\"><h4>Score by picking the most prevalent color each turn</h4></div>\n            }\n        }\n        else {\n            instructions = <div></div>\n        }\n        return (\n            <div className=\"Display\">\n                <div className=\"score_board\">\n                    <div className=\"container\">\n                        <div className=\"row\">                            \n                            <div className=\"col\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-block\" onClick={() => {this.props.doInitialFetch('next', 5, this.props.titles)}}>Easy</button>\n                            </div>\n                            <div className=\"col\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-block\" onClick={() => {this.props.doInitialFetch('next', 10, this.props.titles)}}>Medium</button>\n                            </div>\n                            <div className=\"col\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-block\" onClick={() => {this.props.doInitialFetch('next', 15, this.props.titles)}}>Hard</button>\n                            </div>                       \n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h2 className=\"score display-4\">{`Score: ${this.props.score}`}</h2>\n                                { this.props.titles.length > 1 ? <h4 className=\"score\">{`Your high score is: ${this.state.highScore}`}</h4> : <div></div> }\n                                <ScoreBar />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div style={this.props.choiceColor} ></div>\n                                {\n                                    this.props.chosenRanking ? <div><h3 className=\"score\">{`was the ${this.props.chosenRanking}${end} most`}</h3><h3 className=\"score\">{`common`}</h3></div> : <div></div>\n                                }                                \n                            </div>\n                        </div>  \n                        <br />\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                { this.props.chosenPlace === 1 ? <h1 className=\"score display-4\">Score!</h1> : <div></div> }\n                                { instructions }\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                {\n                                    this.props.percentage === 100 ? <img className=\"win\" src=\"https://media.giphy.com/media/3oz8xAFtqoOUUrsh7W/giphy.gif\"></img>: <div></div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    chosenPlace: state.chosen_place, \n    score: state.score,\n    titles: state.titles,\n    buttonStyles: state.button_styles,\n    choiceColor: state.choice_color,\n    percentage: state.percentage,\n    choices: state.choices,\n    chosenRanking: state.chosen_ranking\n})\n\nconst mapDispatchToProps = dispatch => ({\n    doInitialFetch: (load_type, num_colors, titles) => dispatch(doInitialFetch(load_type, num_colors, titles))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Display)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Peek.css'\n\nimport { sneakAPeak } from '../../actions/index'\n\nclass Peek extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { shown: false }\n    }\n\n    showImage = () => {\n        if (this.props.sneakPeaks > 0) {\n            if (!this.state.shown) {\n                document.querySelector(\"#peek\").src = \"data:image/png;base64,\" + this.props.ogPngData;\n                this.setState({shown: true})\n                this.startTimer()\n            } \n        }\n    }\n\n    startTimer = () => {\n        let sec = 4\n        const intervalId = setInterval(() => {\n            document.querySelector(\"#time\").innerHTML = sec\n            if (sec > 0 ) {\n                sec--\n            } else {\n                document.querySelector(\"#peek\").src = \"\";\n                this.setState({shown: false})\n                clearInterval(intervalId);\n            }\n          }, 1000);\n    }\n\n    render() {\n        return (\n            <div className=\"Peek\"> \n                <div className=\"row\">                            \n                    <div className=\"col-xs\">\n                        <button type=\"button\" className=\"btn btn-secondary sneak-peek\" onClick={() => {this.props.sneakAPeak(this.props.sneakPeaks); this.showImage()}}>Sneak Peek</button>\n                    </div>\n                    <div className=\"col-xs\">\n                        <div className=\"sneak-peaks\">{`${this.props.sneakPeaks}x left`}</div>\n                    </div>     \n                </div>\n                <div className=\"row\">                            \n                    <div className=\"col\">\n                        { this.state.shown ? <div className=\"timer\">Sneak peek for <span id=\"time\">5</span> seconds!</div> : <div></div> }\n                        <img id=\"peek\" src=\"\"></img>\n                    </div>             \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ogPngData: state.og_png_data, \n    sneakPeaks: state.sneak_peaks\n})\n\nconst mapDispatchToProps = dispatch => ({\n    sneakAPeak: (sneakPeaks) => dispatch(sneakAPeak(sneakPeaks))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Peek)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Image from './components/Image/Image'\nimport Button from './components/Button/Button'\nimport Display from './components/Display/Display'\nimport Peek from './components/Peek/Peek'\n\nimport { doInitialFetch } from './actions/index'\n\nimport './Game.css'\n\nclass Game extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.doInitialFetch('new', 10, this.props.titles)\n    }\n\n    render() {        \n        return (\n            <div className=\"Game\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Peek />\n                    </div>\n                        <div className=\"col-auto\">\n                        <Image />\n                        {\n                            this.props.button_styles.map((button_style, i) => {\n                                return <Button key={i} place={i} buttonStyle={button_style}/>\n                            })\n                        }\n                    </div>\n                    <div className=\"col\">\n                        <Display />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    button_styles : state.button_styles,\n    titles : state.titles\n})\n\nconst mapDispatchToProps = dispatch => ({\n    doInitialFetch: (load_type, num_colors, titles) => dispatch(doInitialFetch(load_type, num_colors, titles))\n})\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps\n  )(Game)","import React, { Component } from 'react';\nimport Game from './Game'\nimport './App.css'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Game /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n    color_options: [],\n    image_size: [], \n    button_colored: [],\n    score: 0, \n    percentage: 0,\n    chosen_place: 0,\n    button_styles: [],\n    percentage: 0, \n    choices: [],\n    titles: [],\n    choice_color: {},\n    sneak_peaks: 3,\n    // host: 'http://127.0.0.1:5000/'\n    // host: 'https://pixel-game-api.herokuapp.com/'\n}\n  \n  const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'DO_INITIAL_FETCH_SUCCESS':\n        return({\n          ...state,\n          image_size: action.image_size,\n          png_data: action.png_data,\n          og_png_data: action.png_data,\n          titles: action.titles,\n          button_styles: [],\n          button_colored: [],\n          score: 0,\n          percentage: 0,\n          chosen_place: 0, \n          choices: [],\n          color_options: [], \n          labels: [],\n          choice_color: {},\n          chosen_ranking: 0,\n          sneak_peaks: 3\n        })\n      \n      case 'GET_COLOR_OPTIONS_SUCCESS':\n        return({\n          ...state,\n          color_options: action.color_options, \n          labels: action.labels,\n          title: action.title,\n          button_colored: action.color_options.map(option => true)\n        })\n\n      case 'SET_BUTTON_STYLES':\n        return({\n          ...state,\n          button_styles: action.button_styles,\n          choice_color: action.choice_color,\n          color_options: action.color_options\n        })   \n        \n      case 'CHOOSE_COLOR_SUCCESS':\n        return({\n          ...state,\n          png_data: action.png_data,\n          color_options: action.color_options, \n          chosen_place: action.chosen_place,\n          choices: action.choices,\n          percentage: state.percentage + action.percentage, \n          score: state.score + action.score,\n          chosen_ranking: action.chosen_ranking\n        })\n\n      case 'SNEAK_A_PEAK':\n        return({\n          ...state,\n          sneak_peaks: action.sneakPeaks\n        })\n\n      case 'UNSET_CLICK':\n        return({\n          ...state,\n          button_colored: action.button_colored\n        })\n\n\n      default:\n        return (state)\n    }\n  }\n  \n  export default rootReducer\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './reducers/index'\nimport thunk from 'redux-thunk'\nimport mixpanel from 'mixpanel-browser'\nimport MixpanelMiddleware from 'redux-mixpanel-middleware'\n\nconst t = 'ea649757ae9f14683b0c30fbe49a39dc'\n\nmixpanel.init(t)\nconst mixpanelMiddleware = new MixpanelMiddleware(mixpanel)\n \nconst store = createStore(rootReducer, applyMiddleware(thunk, mixpanelMiddleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}